MessageNotUnderstood: RectangleMorph>>exit9 February 2011 1:30:05.075 pmVM: Win32 - SmalltalkImage: Squeak4.1 [latest update: #9957]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir D:\Nueva carpeta (3)\Squeak 4.1Trusted Dir D:\Nueva carpeta (3)\Squeak 4.1\userUntrusted Dir D:\Documents and Settings\user\Mis documentos\My SqueakRectangleMorph(Object)>>doesNotUnderstand: #exit	Receiver: a RectangleMorph(3256)	Arguments and temporary variables: 		aMessage: 	exit		exception: 	MessageNotUnderstood: RectangleMorph>>exit		resumeValue: 	nil	Receiver's instance variables: 		bounds: 	67@111 corner: 117@151		owner: 	nil		submorphs: 	#()		fullBounds: 	67@111 corner: 117@151		color: 	(Color r: 0.613 g: 0.903 b: 1.0)		extension: 	a MorphExtension (2857) [other:  (lastPosition -> 67@111) (borderSty...etc...		borderWidth: 	2		borderColor: 	Color blackUndefinedObject>>DoIt	Receiver: nil	Arguments and temporary variables: 	Receiver's instance variables: nilCompiler>>evaluate:in:to:notifying:ifFail:logged:	Receiver: a Compiler	Arguments and temporary variables: 		textOrStream: 	a ReadWriteStream 'juego_ Juego new.r:= RectangleMorph new open...etc...		aContext: 	nil		receiver: 	nil		aRequestor: 	a SmalltalkEditor		failBlock: 	[closure] in [] in SmalltalkEditor(TextEditor)>>evaluateSelection		logFlag: 	true		methodNode: 	DoIt	^ r exit		method: 	(UndefinedObject>>#DoIt "a CompiledMethod(1971)")		value: 	nil		toLog: 	nil		itsSelection: 	nil		itsSelectionString: 	nil	Receiver's instance variables: 		sourceStream: 	a ReadWriteStream 'juego_ Juego new.r:= RectangleMorph new open...etc...		requestor: 	a SmalltalkEditor		class: 	UndefinedObject		category: 	nil		context: 	nil		parser: 	a Parser[] in SmalltalkEditor(TextEditor)>>evaluateSelection	Receiver: a SmalltalkEditor	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		sensor: 	a KeyboardBuffer		morph: 	a TextMorphForEditView(220)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a MultiNewParagraph		pointBlock: 	a CharacterBlock with index 88 and rectangle 34@80 corner: 34@96 i...etc...		markBlock: 	a CharacterBlock with index 81 and character $r and rectangle 0@80 c...etc...		beginTypeInBlock: 	nil		emphasisHere: 	{a TextColor code: Color black}		otherInterval: 	(87 to: 87)		lastParenLocation: 	nil		oldInterval: 	(88 to: 87)		styler: 	nil--- The full stack ---RectangleMorph(Object)>>doesNotUnderstand: #exitUndefinedObject>>DoItCompiler>>evaluate:in:to:notifying:ifFail:logged:[] in SmalltalkEditor(TextEditor)>>evaluateSelection - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -BlockClosure>>on:do:SmalltalkEditor(TextEditor)>>evaluateSelection[] in PluggableTextMorphPlus(PluggableTextMorph)>>doItTextMorphForEditView(TextMorph)>>handleEdit:PluggableTextMorphPlus(PluggableTextMorph)>>handleEdit:PluggableTextMorphPlus(PluggableTextMorph)>>doItWorkspace(StringHolder)>>perform:orSendTo:[] in MenuItemMorph>>invokeWithEvent:BlockClosure>>ensure:CursorWithMask(Cursor)>>showWhile:MenuItemMorph>>invokeWithEvent:MenuItemMorph>>mouseUp:MenuItemMorph>>handleMouseUp:MouseButtonEvent>>sentTo:MenuItemMorph(Morph)>>handleEvent:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:MenuItemMorph(Morph)>>processEvent:using:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:MenuMorph(Morph)>>processEvent:using:MenuMorph(Morph)>>processEvent:MenuMorph>>handleFocusEvent:[] in HandMorph>>sendFocusEvent:to:clear:[] in PasteUpMorph>>becomeActiveDuring:BlockClosure>>on:do:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendMouseEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor:Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:WorldState>>doOneSubCycleFor:PasteUpMorph>>doOneSubCycleMenuMorph>>invokeModalAt:in:allowKeyboard:MenuMorph>>invokeModal:MenuMorph>>invokeModalPluggableTextMorphPlus(PluggableTextMorph)>>yellowButtonActivity:TextMorphForEditView>>mouseDown:TextMorphForEditView(Morph)>>handleMouseDown:MouseButtonEvent>>sentTo:TextMorphForEditView(Morph)>>handleEvent:...etc...